parameters:
  jobName: 'DeployNuget'
  jobDisplayName: 'Deploy to Nuget'
  pool: 'Default'
  artifactName: 'nuget'
  nuGetServiceConnections: ''
  allowPackageConflicts: true
  nugetPackageVersion: ''

jobs:
  - deployment: ${{ parameters.jobName }}
    displayName: ${{ parameters.jobDisplayName }}
    pool: ${{ parameters.pool }}
    variables:
        nugetVersion: ${{ parameters.nugetPackageVersion }}
        isDuplicate: false
        allowPackageConflicts: ${{ parameters.allowPackageConflicts }}
    environment: PreviewAzure
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@1
            inputs:
              artifactName: ${{ parameters.artifactName }}
              targetPath: $(Build.ArtifactStagingDirectory)

          # ApiKeys not supported
          # - task: NuGetAuthenticate@0
          #   inputs:
          #     nuGetServiceConnections: ${{ parameters.nuGetServiceConnections }}

          - task: NuGetToolInstaller@1

          - task: Powershell@2
            name: nuGetPush
            displayName: 'Nuget Push'
            env:
              apiKey: $(nuGet_Org_ApiKey)
            inputs:
              targetType: inline
              script: |
                 nuget push -ApiKey $env:apiKey -Source https://api.nuget.org/v3/index.json $(Build.ArtifactStagingDirectory)/**/*.nupkg -NoSymbols -SkipDuplicate ${{ parameters.allowPackageConflicts }}
    condition: > 
      and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), 
        or(eq(variables['Build.SourceBranch'], 'refs/heads/master'),
          startswith(variables['Build.SourceBranch'], 'refs/heads/release/'),
          startswith(variables['Build.SourceBranch'], 'refs/heads/azure-pipelines-test')) )